node、npm及node_modules中依赖的版本更新  https://www.cnblogs.com/maskmtj/p/7872325.html

好久没用node了，想重新拾起来发现node还有相关模块的版本都太低了，使用npm install全是报版本低的警告。

这里记录一下，版本管理和node_modules更新的方法。

我用的是Windows的系统，Windows下有一个node版本管理工具叫：gnvm。Linux下是nvm。

gnvm下载地址：https://github.com/Kenshin/gnvm

直接下载里面的gnvm.exe文件丢到你的node安装路径里就好了（node路径需要添加到环境变量）

想要将node和npm（node的包管理工具）更新到最新的版本就键入命令

gnvm update latest
gnvm npm latest
查看本地node版本

c:\> gnvm ls
5.1.1 -- latest
1.0.0
1.0.0 -- x86
5.0.0 -- global
使用最新版本的node

gnvm use latest
 这样node和npm都升级了，但是node_modules里面的依赖还没有更新，从网上发现了一个很好用的工具：npm-check

npm install npm-check -g
npm-check
用npm安装并使用，这样就会出现本地依赖和你package.json中的依赖的比对状态，哪些没装，哪些需要更新一看便知



 更新依赖包，键入

npm update -S
npm update -D
分别更新dependencies和devDependencies中的依赖，更新的时候顺便会安装依赖，所以不用npm install了

到此，工作环境中的node，npm，node_modules中的依赖就都是最新版的了~
